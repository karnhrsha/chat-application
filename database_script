-- Create the database (if not already created)
CREATE DATABASE IF NOT EXISTS course_management;
USE course_management;

-- Table for users (students and admins)
CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    role ENUM('student', 'admin') DEFAULT 'student',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Table for courses
CREATE TABLE courses (
    course_id INT AUTO_INCREMENT PRIMARY KEY,
    course_name VARCHAR(100) NOT NULL,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Table for enrollments (tracks which users are enrolled in which courses)
CREATE TABLE enrollments (
    enrollment_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    course_id INT NOT NULL,
    enrollment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (course_id) REFERENCES courses(course_id) ON DELETE CASCADE
);

-- Table for chat rooms (one chat room per course)
CREATE TABLE chat_rooms (
    chat_room_id INT AUTO_INCREMENT PRIMARY KEY,
    course_id INT NOT NULL,
    chat_room_name VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (course_id) REFERENCES courses(course_id) ON DELETE CASCADE
);

-- Table for chat logs (messages within the chat room)
CREATE TABLE chat_logs (
    message_id INT AUTO_INCREMENT PRIMARY KEY,
    chat_room_id INT NOT NULL,
    user_id INT NOT NULL,
    message TEXT NOT NULL,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (chat_room_id) REFERENCES chat_rooms(chat_room_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Table for user profiles
CREATE TABLE profiles (
    profile_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    bio TEXT,
    profile_picture_url VARCHAR(255),
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Insert sample data into users table
INSERT INTO users (username, email, password, role) 
VALUES ('John Doe', 'john@example.com', 'password123', 'student'),
       ('Jane Admin', 'jane@example.com', 'adminpass456', 'admin');

-- Insert sample data into courses table
INSERT INTO courses (course_name, description) 
VALUES ('Introduction to Programming', 'Learn the basics of programming in Python.'),
       ('Advanced JavaScript', 'Deep dive into JavaScript concepts and frameworks.');

-- Insert sample data into enrollments table
INSERT INTO enrollments (user_id, course_id) 
VALUES (1, 1),  -- John Doe enrolled in Introduction to Programming
       (1, 2);  -- John Doe also enrolled in Advanced JavaScript

-- Insert sample data into chat rooms table
INSERT INTO chat_rooms (course_id, chat_room_name) 
VALUES (1, 'Intro to Programming Chat Room'),
       (2, 'Advanced JavaScript Chat Room');

-- Insert sample data into chat logs table
INSERT INTO chat_logs (chat_room_id, user_id, message) 
VALUES (1, 1, 'Hello! I have a question about the first assignment.'),
       (2, 1, 'Can someone explain closures in JavaScript?');

-- Insert sample data into profiles table
INSERT INTO profiles (user_id, bio, profile_picture_url) 
VALUES (1, 'Computer Science student passionate about coding.', 'https://example.com/john_profile.jpg'),
       (2, 'Course admin and programming enthusiast.', 'https://example.com/jane_profile.jpg');



